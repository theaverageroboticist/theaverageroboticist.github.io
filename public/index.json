[{"content":"Using docker with a gui\n","permalink":"https://theaverageroboticist.github.io/posts/gui-with-docker/","summary":"Using docker with a gui","title":"Gui With Docker"},{"content":"Use the man \u0026lt;Command\u0026gt; to get the manual page for the commands Ex,\nman rm\nFile Management Command Description ls -la List all files/folders present in the directory pwd Obtain the path of current working directory cd \u0026lt;directory name\u0026gt; Change to the directory name touch \u0026lt;filename.extension\u0026gt; Create a file mkdir -p parentdirectory/directory Create a folder with all parent directories rm \u0026lt;filename\u0026gt; Remove a file rm -r \u0026lt;directory\u0026gt; Remove a directory, -r removes the files recursively Searching Command Description grep \u0026quot;\u0026lt;something\u0026gt;\u0026quot; filename Find \u0026ldquo;something\u0026rdquo; the file \u0026ldquo;filename\u0026rdquo; grep -i \u0026quot;\u0026lt;something\u0026gt;\u0026quot; filename Making it case insensitive with -i grep -ro \u0026lt;something\u0026gt; \u0026lt;path\u0026gt;/ Search for something in path -ro makes it recursive showing only matched pairs find /path/to/folder/ -name *nameOrportion of the file* Find the file in the given path use type f for only files and type d for only directories locate -i filename -i to ignore case Using Multiple Commands Using semicolon between commands ls ; whoami ; pwd will execute all the commands one by one.\nThe next commad will be executed even if the previous ones fail.\nUsing the \u0026amp; operator will execute the next commad if only the previous one suceeds.\nmkdir folder \u0026amp;\u0026amp; cd folder will create and cd to the folder but the other way arround will\nnot work since there will be no directory to change.\nUsing the || operator will execute the next commad if the previous one fails. cd folder || mkdir folder if there id no folder then this commad will make a new one.\nUsing the | piping operator will redirect the first commands output to the second one. ls -la | grep -i \u0026lt;something\u0026gt; the grep commad will Search for something from the output of ls.\n","permalink":"https://theaverageroboticist.github.io/posts/linux-cheatsheet/","summary":"Use the man \u0026lt;Command\u0026gt; to get the manual page for the commands Ex,\nman rm\nFile Management Command Description ls -la List all files/folders present in the directory pwd Obtain the path of current working directory cd \u0026lt;directory name\u0026gt; Change to the directory name touch \u0026lt;filename.extension\u0026gt; Create a file mkdir -p parentdirectory/directory Create a folder with all parent directories rm \u0026lt;filename\u0026gt; Remove a file rm -r \u0026lt;directory\u0026gt; Remove a directory, -r removes the files recursively Searching Command Description grep \u0026quot;\u0026lt;something\u0026gt;\u0026quot; filename Find \u0026ldquo;something\u0026rdquo; the file \u0026ldquo;filename\u0026rdquo; grep -i \u0026quot;\u0026lt;something\u0026gt;\u0026quot; filename Making it case insensitive with -i grep -ro \u0026lt;something\u0026gt; \u0026lt;path\u0026gt;/ Search for something in path -ro makes it recursive showing only matched pairs find /path/to/folder/ -name *nameOrportion of the file* Find the file in the given path use type f for only files and type d for only directories locate -i filename -i to ignore case Using Multiple Commands Using semicolon between commands ls ; whoami ; pwd will execute all the commands one by one.","title":"Linux Cheatsheet"}]