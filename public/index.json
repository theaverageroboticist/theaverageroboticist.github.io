[{"content":"Setting up Azure Kinect with Jetson Asumming that you have ubuntu 20 running on your jetson. Unfotunately at the time of writhing this the SDK is not available for ubuntu 20, but the SDK for 18 can be made to work on 20.\nFirst download the repo config package with curl -sSL -O https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb. Install the config package sudo dpkg -i packages-microsoft-prod.deb. Delete it after installation rm packages-microsoft-prod.deb. Open the file etc/apt/sources.list.d/microsoft-prod.list with your favourite editor. Change the repository Linux repository path\ndeb [arch=arm64] https://packages.microsoft.com/ubuntu/18.04/multiarch/prod bionic main Update the apt repository sudo apt update Install the package with sudo apt install libk4a1.4 libk4a1.4-dev k4a-tools Test the installation by launching k4aviewer Copy the script into /etc/udev/rules.d/ to avoid using root all the time. Installing the ros2 foxy driver for Azure Kinect source the underlay source /opt/ros/foxy/setup.bash Clone the repo from the foxy branch git clone https://github.com/microsoft/Azure_Kinect_ROS_Driver.git -b foxy-devel Install the dependencies pip3 install xacro ; sudo apt install ros-foxy-joint-state-publisher cd Azure_Kinect_ROS_Driver Build the package colcon build Source the overlay source install/setup.bash Launch with ros2 launch azure_kinect_ros_driver driver.launch.py Open rviz2 in another terminal to view the topics that are published. Refer the usage guide for configuration. ","permalink":"https://theaverageroboticist.github.io/posts/jetson-yolo/","summary":"Setting up Azure Kinect with Jetson Asumming that you have ubuntu 20 running on your jetson. Unfotunately at the time of writhing this the SDK is not available for ubuntu 20, but the SDK for 18 can be made to work on 20.\nFirst download the repo config package with curl -sSL -O https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb. Install the config package sudo dpkg -i packages-microsoft-prod.deb. Delete it after installation rm packages-microsoft-prod.deb. Open the file etc/apt/sources.","title":"Jetson Yolo"},{"content":"Basics Command Description pacman -S \u0026lt;package name\u0026gt; Install a package pacman -R \u0026lt;package name\u0026gt; Remove a package but keep the dependencies pacman -Rs \u0026lt;package name\u0026gt; Remove a package and dependencies(not used by other packages) pacman -Rus \u0026lt;package name\u0026gt; Remove a package with all the packages that depend on it pacman -Rn \u0026lt;package name\u0026gt; Removes the package and its configuration files pacman -Syy Update Package list pacman -Syu Upgrade all the packages Package Info Command Description pacman -Ss \u0026lt;package name\u0026gt; Search for a package in the pacman database pacman -Si \u0026lt;package name\u0026gt; Display information of the package pacman -Qs \u0026lt;package name\u0026gt; Search for a installed package pacman -Qi \u0026lt;package name\u0026gt; Display information of a installed package pacman -Ql \u0026lt;package name\u0026gt; Retrive all the files installed by the package pacman -Qk \u0026lt;package name\u0026gt; Verify if the files installed are present pacman -Qdt List all packages no longer required as dependencies pacman -Sc Remove all the cached packages pacman -Sw \u0026lt;package name\u0026gt; Download a package without installing pacman -U package To install a package from local repo ","permalink":"https://theaverageroboticist.github.io/posts/pacman-commands/","summary":"Basics Command Description pacman -S \u0026lt;package name\u0026gt; Install a package pacman -R \u0026lt;package name\u0026gt; Remove a package but keep the dependencies pacman -Rs \u0026lt;package name\u0026gt; Remove a package and dependencies(not used by other packages) pacman -Rus \u0026lt;package name\u0026gt; Remove a package with all the packages that depend on it pacman -Rn \u0026lt;package name\u0026gt; Removes the package and its configuration files pacman -Syy Update Package list pacman -Syu Upgrade all the packages Package Info Command Description pacman -Ss \u0026lt;package name\u0026gt; Search for a package in the pacman database pacman -Si \u0026lt;package name\u0026gt; Display information of the package pacman -Qs \u0026lt;package name\u0026gt; Search for a installed package pacman -Qi \u0026lt;package name\u0026gt; Display information of a installed package pacman -Ql \u0026lt;package name\u0026gt; Retrive all the files installed by the package pacman -Qk \u0026lt;package name\u0026gt; Verify if the files installed are present pacman -Qdt List all packages no longer required as dependencies pacman -Sc Remove all the cached packages pacman -Sw \u0026lt;package name\u0026gt; Download a package without installing pacman -U package To install a package from local repo ","title":"Pacman Commands"},{"content":"Using docker with a gui\n","permalink":"https://theaverageroboticist.github.io/posts/gui-with-docker/","summary":"Using docker with a gui","title":"Gui With Docker"},{"content":"Use the man \u0026lt;Command\u0026gt; to get the manual page for the commands Ex,\nman rm\nFile Management Command Description ls -la List all files/folders present in the directory pwd Obtain the path of current working directory cd \u0026lt;directory name\u0026gt; Change to the directory name touch \u0026lt;filename.extension\u0026gt; Create a file mkdir -p parentdirectory/directory Create a folder with all parent directories rm \u0026lt;filename\u0026gt; Remove a file rm -r \u0026lt;directory\u0026gt; Remove a directory, -r removes the files recursively Searching Command Description grep \u0026quot;\u0026lt;something\u0026gt;\u0026quot; filename Find \u0026ldquo;something\u0026rdquo; the file \u0026ldquo;filename\u0026rdquo; grep -i \u0026quot;\u0026lt;something\u0026gt;\u0026quot; filename Making it case insensitive with -i grep -ro \u0026lt;something\u0026gt; \u0026lt;path\u0026gt;/ Search for something in path -ro makes it recursive showing only matched pairs find /path/to/folder/ -name *nameOrportion of the file* Find the file in the given path use type f for only files and type d for only directories locate -i filename -i to ignore case Using Multiple Commands Using semicolon between commands ls ; whoami ; pwd will execute all the commands one by one.\nThe next commad will be executed even if the previous ones fail.\nUsing the \u0026amp; operator will execute the next commad if only the previous one suceeds.\nmkdir folder \u0026amp;\u0026amp; cd folder will create and cd to the folder but the other way arround will\nnot work since there will be no directory to change.\nUsing the || operator will execute the next commad if the previous one fails. cd folder || mkdir folder if there id no folder then this commad will make a new one.\nUsing the | piping operator will redirect the first commands output to the second one. ls -la | grep -i \u0026lt;something\u0026gt; the grep commad will Search for something from the output of ls.\n","permalink":"https://theaverageroboticist.github.io/posts/linux-cheatsheet/","summary":"Use the man \u0026lt;Command\u0026gt; to get the manual page for the commands Ex,\nman rm\nFile Management Command Description ls -la List all files/folders present in the directory pwd Obtain the path of current working directory cd \u0026lt;directory name\u0026gt; Change to the directory name touch \u0026lt;filename.extension\u0026gt; Create a file mkdir -p parentdirectory/directory Create a folder with all parent directories rm \u0026lt;filename\u0026gt; Remove a file rm -r \u0026lt;directory\u0026gt; Remove a directory, -r removes the files recursively Searching Command Description grep \u0026quot;\u0026lt;something\u0026gt;\u0026quot; filename Find \u0026ldquo;something\u0026rdquo; the file \u0026ldquo;filename\u0026rdquo; grep -i \u0026quot;\u0026lt;something\u0026gt;\u0026quot; filename Making it case insensitive with -i grep -ro \u0026lt;something\u0026gt; \u0026lt;path\u0026gt;/ Search for something in path -ro makes it recursive showing only matched pairs find /path/to/folder/ -name *nameOrportion of the file* Find the file in the given path use type f for only files and type d for only directories locate -i filename -i to ignore case Using Multiple Commands Using semicolon between commands ls ; whoami ; pwd will execute all the commands one by one.","title":"Linux Cheatsheet"}]